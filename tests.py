# This file was *autogenerated* from the file tests.sage.
from sage.all_cmdline import *	 # import sage library
_sage_const_3 = Integer(3); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_7 = Integer(7)
from networkIRR import *

# an example adjacency matrix
Aij32=np.array([[_sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 ], 
				[_sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 ], 
				[_sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 ], 
				[_sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 ], 
				[_sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_0 ],
				[_sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 ], 
				[_sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 ], 
				[_sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_0 , _sage_const_1 ], 
				[_sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 ], 
				[_sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_0 , _sage_const_0 ], 
				[_sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_0 ]])
				
# create a networkIRR object for the adjacency matrix
data32=NetworkIRR(Aij32)

# get clusters
print ("the orbits are:")
print (data32.get_orbits())

print ("the number of symmetries is",data32.get_automorphism_group().order())

# generate T matrix
tmat=data32.get_transformation_operator()

print ("the T matrix:")
#print T matrix
for row in tmat:
	printstring=""
	for x in row:
		wch=str(round(real(x),_sage_const_3 ))
		printstring=printstring+wch+" "*(int(_sage_const_7 )-len(wch))

	printstring=printstring+"\n"
	print (printstring)
	
# generate B matrix
tinv=la.inv(tmat)
b=np.dot(tmat,np.dot(Aij32,tinv))

print ("the B matrix:")
for row in b:
	printstring=""
	for x in row:
		wch=str(round(real(x),_sage_const_3 ))
		printstring=printstring+wch+" "*(int(_sage_const_7 )-len(wch))
	printstring=printstring+"\n"
	print (printstring)
